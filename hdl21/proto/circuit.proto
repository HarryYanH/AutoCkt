syntax = "proto3";

/// Package - A Collection of Circuit-Modules
message Package {
  string name = 1;
  repeated Module modules = 2;
}

message QualifiedName {
  string domain = 1;
  string name = 2;
}

message Reference {
  oneof to {
    QualifiedName qn = 1;
  }
}

message Parameter {
  oneof value {
    int64 integer = 2;
    double double = 3;
    string string = 4;
  }
}

message Port {
  enum Direction {
    INPUT = 0;
    OUTPUT = 1;
    INOUT = 2;
    NONE = 3;
  }
  Signal signal = 1;
  Direction direction = 2;
}

message Signal {
  // Signal Name
  string name = 1;
  // Bus Width 
  int64 width = 2;
}

// Signal Slice
message Slice {
  // Parent Signal Name
  string signal = 1;
  // Top Index
  int64 top = 2;
  // Bottom Index
  int64 bot = 3;
}
// Signal Concatenation 
message Concat {
  repeated Connection parts = 1;
}
// Connection Union
// Enumerates all types that can be 
// (a) Connected to Ports, and 
// (b) Concatenated 
message Connection {
  oneof stype {
    Signal sig = 1;
    Slice slice = 2;
    Concat concat = 3;
  }
}
/// Module Instance 
message Instance {
  // Instance Name 
  string name = 1;
  // Reference to Module instantiated
  Reference module = 2;
  // Parameter Values 
  map<string, Parameter> parameters = 3;
  // Map internal to external signals by name.
  map<string, Connection> connections = 4;
}

/// Module - the primary unit of hardware re-use
message Module {
  // Required Module Name 
  QualifiedName name = 1;
  // Port Definitions 
  repeated Port ports = 2;
  // Internal Signals
  repeated Signal signals = 3;
  // Module Instances
  repeated Instance instances = 4;
  // Parameters and Default Values 
  map<string, Parameter> default_parameters = 5;
}